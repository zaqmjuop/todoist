{"version":3,"sources":["dom.js","utils.js","ajax.js","components/component.js","components/leftMenu.js","lib/dom.js","lib/customDate.js","lib/datepicker.js","components/missionForm.js","../../node_modules/arraystorage/docs/arraystorage.js","model.js","components/missionListItem.js","components/missionCard.js","components/welcome.js","components/router.js","components/main.js","index.js"],"names":["Dom","isString","str","result","isEffectiveString","collectClasses","classes","TypeError","replace","split","isGlobalInited","query","dom","HTMLElement","isCreateReg","createMatch","match","document","createElement","querySelector","key","value","arguments","length","toLocaleLowerCase","innerText","String","innerHTML","tagName","setAttribute","getAttribute","forEach","clas","classList","contains","add","remove","collect","hasClass","removeClass","addClass","querySelectorAll","degenerate","element","appendChild","position","Number","isSafeInteger","want","of","childElementCount","after","children","insertBefore","isElement","parent","parentElement","replaceChild","nextElementSibling","removeChild","selfDestruct","content","undefined","selector","elements","getParent","getParents","hasParent","event","callback","addEventListener","removeEventListener","hasChild","index","Array","from","indexOf","nodeType","buffer","tree","push","getParentsTree","all","parentsCollect","item","isSameNode","isElementChild","e","Error","parents","pattern","find","prototype","globalInit","isKeyEnter","KeyboardEvent","keyCode","isFunction","param","res","now","Date","formatDate","parameter","date","getTime","toLocaleDateString","formatTime","toTimeString","isValidDate","newPromise","Promise","resolve","differDay","datea","dateb","dateaStart","days","isEmptyString","isFalsely","isEmpty","divisio","ary","Function","flat","deep","times","core","array","container","i","promiseAjax","ajax","url","xmlhttp","window","XMLHttpRequest","ActiveXObject","open","send","onreadystatechange","readyState","status","Utils","promise","get","target","response","components","Set","counter","takeId","Component","template","Object","assign","attr","selectors","selectorNames","keys","name","defineProperty","cpt","isComponent","delete","componentsSet","present","data","isHasFunc","some","isFunc","watch","watchs","watchKeys","dataKeys","filter","includes","val","setComponentId","methods","methodName","method","bind","formatChildren","then","lifeCycle","passon","passPresent","presentKeys","originReg","origin","location","href","pjaxFormatHtml","style","created","implant","implanted","findBy","where","typeArg","detail","CustomEvent","dispatchEvent","componentId","recursive","child","stylesContent","styles","styleContent","styleIndex","rep","replaceGeneralScopedStyle","join","selectorsContents","singleSelectorsContent","selectorIndex","regSingleSelector","repConent","repSingleSelector","selectorNoPseudo","repNoPseudo","repselectorsContents","commentReg","singleStyle","mediaHeadReg","mediaHead","styleContents","mediaContent","replacedContents","replaceGeneralScopedStyles","resultStyleHTML","isScoped","handleScopedStyle","existStyle","appendComponent","exist","replaceComponent","has","JSON","stringify","removeComponent","keyName","keyId","set","cpts","matchName","matchCId","isMatch","html","body","firstElementChild","format","component","appendAccurate","head","append","clearTemplate","destroy","clear","removed","utils","inited","fillTime","fill","time","dateStr","fillTimeOut","setTimeout","init","parentNode","eleReg","eleMatch","toLocaleUpperCase","warn","object","CustomDate","defaultMonths","isSafeYear","number","isValid","isInteger","isSafeMonth","year","getFullYear","month","getMonth","day","getDate","yearNumber","months","count","getMonths","week","daysCount","getDaysCount","prevThe1st","prevDaysCount","weekStart","getDay","dayNum","thisWeek","getWeekArray","prevSaturday","prevSaturdayDate","prevWeek","unshift","nextSunday","nextSundayDate","nextWeek","toPicker","isbindTurnOff","isWindowResize","getFixedTop","offsetTop","offsetParent","getFixedLeft","offsetLeft","getResponsiveTop","reference","topSpace","topSeen","scrollY","isBottomSeenEnough","innerHeight","offsetHeight","isTopSeenEnough","top","getResponsiveLeft","leftSpace","left","offsetWidth","bindWindowResize","resizeBodyMinHeight","windowHeight","minHeight","theadTop","prevMonth","text","th","nextMonth","input","theadBottom","tdWeek","td","pickerElement","table","thtop","thbottom","thead","tbody","Picker","current","fillDayPickerByDate","toDate","bindEvent","monthArray","getMonthArray","trs","next7th","next1stWeek","weekArray","weekIndex","trItem","tds","dayIndex","tdItem","pastPikcer","byDate","backOneMonth","fillDayPickerByCurrent","aheadOneMonth","daypickerItems","yearInput","monthBoard","output","pickValue","pickDate","reset","clearPicked","stopPropagation","datepickers","yclass","xclass","picker","touchElement","newDay","newDate","bindMonthArrow","bindPickAction","bindTurnOn","bindTurnOff","bindYearInput","datepicker","contentInput","alert","dateInput","id","cid","submitText","submit","bindEvents","pastItem","ReferenceError","hide","on","formSubmit","cancelForm","reduce","show","mission","ArrayStorage","getAll","getExpired","isNeed","getDone","state","getUndone","defaultQuery","getMark","mark","getQuery","finish","toggleState","primaryKey","update","toggleClass","formId","missionForm","dayMark","initForm","loadDB","initItems","items","appendItem","bysSate","map","allot","states","sort","a","b","itemParam","missionListItem","form","getIndex","cardBody","createMission","showForm","upData","li","title","leftMenu","missionCard","router","welcome","path","route","history","pushState","render","main","resizeTo","innerWidth","pjaxCreate","routerParam"],"mappings":"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","file":"index.map","sourceRoot":"../assets/scripts","sourcesContent":["\nconst isString = (str) => {\n  const result = (typeof str === 'string');\n  return result;\n};\n\nconst isEffectiveString = (str) => {\n  const result = !!(str && isString(str));\n  return result;\n};\n\nconst collectClasses = (classes) => {\n  if (!isEffectiveString(classes)) { throw new TypeError(`参数classes不能为 ${classes}`); }\n  return classes.replace(/\\s+/g, ' ').split(' ');\n};\n\n\nlet isGlobalInited = 0;\n\nclass Dom {\n  constructor(query) {\n    // 允许的参数类型 1.Dom实例对象 2.HTMLElement 3.创建元素所需tagName 4.querySelector\n    // 查找只用querySelector匹配符合条件的第一个元素 查找集合用Dom.all(query)\n    if (!query) { throw new TypeError(`new Dom参数不能为${query}`); }\n    if (query instanceof Dom) {\n      // 参数是Dom的实例对象\n      this.dom = query.dom;\n    } else if (query instanceof HTMLElement) {\n      // 参数是元素\n      this.dom = query;\n    } else if (isEffectiveString(query)) {\n      const isCreateReg = /^<(.+)>$/;\n      const createMatch = query.match(isCreateReg);\n      if (createMatch) {\n        // 创建元素 如('<div>')\n        this.dom = document.createElement(createMatch[1]);\n      } else {\n        // 查找元素\n        this.dom = document.querySelector(query);\n      }\n    }\n    return this;\n  }\n\n  static all(query) {\n    return document.querySelectorAll(query);\n  }\n\n  static of(str) {\n    return new Dom(str);\n  }\n\n  static degenerate(query) {\n    // 参数的类型\n    // 参数如果是Dom的实例对象,则返回该实例包含的HTMLElement\n    // 参数如果是HTMLElement,则返回参数自身\n    // 参数如果是query则返回querySelector的结果\n    let result;\n    if (query instanceof Dom) {\n      result = query.dom;\n    } else if (query instanceof HTMLElement) {\n      result = query;\n    } else if (isEffectiveString(query)) {\n      result = document.querySelector(query);\n    } else {\n      throw new TypeError(`参数query不能是${query}`);\n    }\n    return result;\n  }\n\n  attr(key, value) {\n    // 查看或修改元素的属性\n    // 如果参数key是text或html 则修改innerText或innerHTML\n    if (!isEffectiveString(key)) { throw new TypeError(`参数key不能为 ${key}`); }\n    let result = this;\n    if (arguments.length > 1) {\n      // 有value参数\n      if (key.toLocaleLowerCase().match(/^text$/)) {\n        // this.attr(text[,innerText])\n        this.dom.innerText = String(value);\n      } else if (key.toLocaleLowerCase().match(/^html$/)) {\n        // this.attr(html[,innerHTML])\n        this.dom.innerHTML = String(value);\n      } else if ((this.dom.tagName === 'INPUT') && (key === 'value')) {\n        // this.attr(value[, val])\n        this.dom.value = String(value);\n      } else {\n        this.dom.setAttribute(key, value);\n      }\n    }\n    if (arguments.length <= 1) {\n      // 没有value参数 默认情况查看属性\n      if (key.toLocaleLowerCase().match(/^text$/)) {\n        // this.attr(text[,innerText])\n        result = this.dom.innerText;\n      } else if (key.toLocaleLowerCase().match(/^html$/)) {\n        // this.attr(html[,innerHTML])\n        result = this.dom.innerHTML;\n      } else if ((this.dom.tagName === 'INPUT') && (key === 'value')) {\n        // this.attr(value[, val])\n        result = this.dom.value;\n      } else {\n        result = this.dom.getAttribute(key);\n      }\n    }\n    return result;\n  }\n\n  addClass(classes) {\n    // 添加class\n    const collect = collectClasses(classes);\n    collect.forEach((clas) => {\n      if (!this.dom.classList.contains(clas)) {\n        this.dom.classList.add(clas);\n      }\n    });\n    return this;\n  }\n\n  removeClass(classes) {\n    // 移除class\n    const collect = collectClasses(classes);\n    collect.forEach((clas) => {\n      if (this.dom.classList.contains(clas)) {\n        this.dom.classList.remove(clas);\n      }\n    });\n    return this;\n  }\n\n  hasClass(classes) {\n    // 判断是否含有class 如果参数是classes 那么只有全部classes都含有时返回true\n    const collect = collectClasses(classes);\n    let result = true;\n    collect.forEach((clas) => {\n      if (!this.dom.classList.contains(clas)) {\n        result = false;\n      }\n    });\n    return result;\n  }\n\n  toggleClass(classes) {\n    // 切换class存在 如果参数是classes 那么只有全部classes存在才算存在\n    const isClassesExist = this.hasClass(classes);\n    if (isClassesExist) {\n      this.removeClass(classes);\n    } else {\n      this.addClass(classes);\n    }\n    return this;\n  }\n\n  append(query) {\n    // 添加元素 如果参数是Selector，则对所有匹配元素操作\n    const elements = isEffectiveString(query)\n      ? document.querySelectorAll(query)\n      : [Dom.degenerate(query)];\n    elements.forEach((element) => {\n      this.dom.appendChild(element);\n    });\n    return this;\n  }\n\n  appendAccurate(query, position) {\n    // 添加一个子元素到指定位置\n    // query是子元素查询参数\n    // position是位置 -1表示成为最后一个子元素，0表示成为第一个子元素，1表示成为第二个子元素\n    // 当position<0或大于指定元素的子元素数时，插入为最后一个元素\n    if (!Number.isSafeInteger(position)) {\n      throw new TypeError(`${position}不是整数`);\n    }\n    const want = Dom.of(query);\n    if (position < 0 || position > this.dom.childElementCount || this.dom.childElementCount === 0) {\n      this.dom.appendChild(want.dom);\n    } else {\n      const after = this.dom.children[position];\n      want.insertBefore(after);\n    }\n    return this;\n  }\n\n  replace(element) {\n    // 将自身替换为另一个element\n    if (!Dom.isElement(element)) {\n      throw new TypeError(`${element}不是HTMLElement`);\n    }\n    const parent = this.dom.parentElement;\n    if (parent) {\n      parent.replaceChild(element, this.dom);\n    }\n    return element;\n  }\n\n  insertBefore(element) {\n    // 插入到另一个HTMLElement之前\n    if (!Dom.isElement(element)) {\n      throw new TypeError(`${element}不是HTMLElement`);\n    }\n    const parent = element.parentElement;\n    if (parent) {\n      parent.insertBefore(this.dom, element);\n    }\n    return element;\n  }\n\n  insertAfter(element) {\n    // 插入到另一个HTMLElement之后\n    if (!Dom.isElement(element)) {\n      throw new TypeError(`${element}不是HTMLElement`);\n    }\n    const parent = element.parentElement;\n    if (parent) {\n      const after = element.nextElementSibling;\n      if (after) {\n        parent.insertBefore(this.dom, after);\n      } else {\n        parent.appendChild(this.dom);\n      }\n    }\n    return element;\n  }\n\n  selfDestruct() {\n    // 删除自己\n    if (!this.dom) { return false; }\n    const parent = this.dom.parentElement;\n    if (!parent) { return false; }\n    parent.removeChild(this.dom);\n    return this;\n  }\n\n  remove(query) {\n    // 删除元素 如果参数是Selector，则对所有匹配元素操作\n    if (arguments.length === 0) {\n      return this.selfDestruct();\n    }\n    const elements = isEffectiveString(query)\n      ? this.dom.querySelectorAll(query)\n      : [Dom.degenerate(query)];\n    elements.forEach((element) => {\n      this.dom.removeChild(element);\n    });\n    return this;\n  }\n\n  text(content) {\n    // 查看或修改innerText\n    let result;\n    if (content !== undefined) {\n      this.dom.innerText = String(content);\n      result = this;\n    } else {\n      result = this.dom.innerText;\n    }\n    return result;\n  }\n\n  html(content) {\n    // 查看或修改innerHTML\n    let result;\n    if (content !== undefined) {\n      this.dom.innerHTML = String(content);\n      result = this;\n    } else {\n      result = this.dom.innerHTML;\n    }\n    return result;\n  }\n\n  child(query) {\n    // 查找单个子元素\n    let element;\n    if (isEffectiveString(query)) {\n      element = this.dom.querySelector(query);\n    } else {\n      element = Dom.degenerate(query);\n    }\n    return element;\n  }\n\n  children(selector) {\n    // 查找子元素集合 若没有参数则返回children()\n    let elements;\n    if (selector === undefined) {\n      elements = this.dom.children();\n    } else {\n      if (!isEffectiveString(selector)) { throw new TypeError(`selector不能为${selector}`); }\n      elements = this.dom.querySelectorAll(selector);\n    }\n    return elements;\n  }\n\n  parent(query) {\n    // 查找单个父元素 query可选 可以是querySelector或Dom实例对象\n    return Dom.getParent(this.dom, query);\n  }\n\n  parents(query) {\n    // 查找父元素集合 query可选 可以是querySelector\n    return Dom.getParents(this.dom, query);\n  }\n\n  hasParent(query) {\n    // 查看是否存在query匹配的父元素 query可以是querySelector或Dom实例对象\n    return Dom.hasParent(this.dom, query);\n  }\n\n  on(event, callback) {\n    // 绑定事件\n    if (!isEffectiveString(event)) { throw new TypeError(`event不能是${event}`); }\n    if (typeof callback !== 'function') { throw new TypeError(`callback不能是${callback}`); }\n    this.dom.addEventListener(event, callback);\n    return this;\n  }\n\n  off(event, callback) {\n    // 取消事件\n    if (!isEffectiveString(event)) { throw new TypeError(`event不能是${event}`); }\n    if (typeof callback !== 'function') { throw new TypeError(`callback不能是${callback}`); }\n    this.dom.removeEventListener(event, callback);\n    return this;\n  }\n\n  clear(event) {\n    // 清空事件\n    if (!isEffectiveString(event)) { throw new TypeError(`event不能是${event}`); }\n    this.dom[`on${event}`] = undefined;\n    return this;\n  }\n\n  static isElement(element) {\n    // 是否是HTMLElement\n    return element && (element instanceof HTMLElement) && (element.nodeType === 1);\n  }\n\n  static getParentsTree(element) {\n    // 获取父元素树\n    if (!Dom.isElement(element)) { throw new TypeError(`element不能是${element}`); }\n    const tree = [];\n    let buffer = element;\n    while (buffer.parentElement) {\n      buffer = buffer.parentElement;\n      tree.push(buffer);\n    }\n    return tree;\n  }\n\n  static getParent(element, query) {\n    // 查找单个父元素 element是HTMLElement, query可以是querySelector或Dom实例对象\n    if (!Dom.isElement(element)) { throw new TypeError(`element不能是${element}`); }\n    let result;\n    const tree = Dom.getParentsTree(element);\n    const all = document.querySelectorAll(query);\n    if (query === undefined) {\n      result = element.parentElement;\n    } else {\n      let parentsCollect;\n      if (isEffectiveString(query)) {\n        parentsCollect = tree;\n      } else if (query instanceof Dom) {\n        parentsCollect = [query.dom];\n      } else if (query instanceof HTMLElement) {\n        parentsCollect = [query];\n      } else {\n        throw new TypeError(`query不能是${query}`);\n      }\n      parentsCollect.forEach((parent) => {\n        all.forEach((item) => {\n          if (item.isSameNode(parent)) {\n            result = parent;\n          }\n        });\n      });\n    }\n    return result;\n  }\n\n  hasChild(query) {\n    // 查找单个父元素 query可以是querySelector或Dom实例对象\n    return Dom.hasChild(this.dom, query);\n  }\n\n  static hasChild(element, query) {\n    // 查找单个父元素 element是HTMLElement, query可以是querySelector或Dom实例对象\n    if (!Dom.isElement(element)) { throw new TypeError(`element不能是${element}`); }\n    let result;\n    const isElementChild = (e) => {\n      // 递归查找父组件是否包含element\n      if (!Dom.isElement(e)) { return false; }\n      const parent = e.parentElement;\n      if (element.isSameNode(parent)) { return true; }\n      return isElementChild(parent);\n    };\n    if (isEffectiveString(query)) {\n      result = !!element.querySelector(query);\n    } else if (query instanceof HTMLElement) {\n      result = isElementChild(query);\n    } else if (query instanceof Dom) {\n      result = isElementChild(query.dom);\n    } else {\n      throw new TypeError(`query不能是${query}`);\n    }\n    return result;\n  }\n\n  static getParents(element, query) {\n    // 查找父元素集合 element是HTMLElement, query可选 可以是querySelector\n    if (!Dom.isElement(element)) { throw new TypeError(`element不能是${element}`); }\n    let result;\n    const tree = Dom.getParentsTree(element);\n    const all = document.querySelectorAll(query);\n    if (query === undefined) {\n      result = tree;\n    } else {\n      let parentsCollect;\n      result = [];\n      if (isEffectiveString(query)) {\n        parentsCollect = tree;\n      } else {\n        throw new TypeError(`query不能是${query}`);\n      }\n      parentsCollect.forEach((parent) => {\n        all.forEach((item) => {\n          if (item.isSameNode(parent)) {\n            result.push(parent);\n          }\n        });\n      });\n    }\n    return result;\n  }\n\n  getIndex() {\n    // 获取该元素的位置，获取该元素是父元素的第几个元素 -1代表该元素没有父元素\n    const parent = this.dom.parentElement;\n    const index = (parent) ? Array.from(parent.children).indexOf(this.dom) : -1;\n    return index;\n  }\n\n  static hasParent(element, query) {\n    // 查看是否存在query匹配的父元素 query可以是querySelector或Dom实例对象或HTMLElement\n    if (!Dom.isElement(element)) { throw new TypeError(`element不能是${element}`); }\n    if (arguments.length < 2) { throw new Error('缺少参数'); }\n    let result = false;\n    const parents = Dom.getParentsTree(element);\n    if (parents.length < 1) { return false; }\n    const pattern = (Dom.isElement(query)) ? query : Dom.of(String(query));\n    const match = parents.find(parent => parent.isSameNode(pattern));\n    if (match) { result = true; }\n    return result;\n  }\n\n  static globalInit() {\n    if (isGlobalInited) { return false; }\n    isGlobalInited += 1;\n    HTMLCollection.prototype.forEach = Array.prototype.forEach;\n\n    return isGlobalInited;\n  }\n}\n\nDom.globalInit();\n\nexport default Dom;\n","const isKeyEnter = event => ((event instanceof KeyboardEvent) && (event.keyCode === 13));\n\nconst isElement = element => (element && (element.nodeType === 1));\n\nconst isString = str => (str && (typeof str === 'string'));\n\nconst isFunction = (param) => {\n  const res = param && (typeof param === 'function');\n  return res;\n};\n\nconst now = new Date();\n\nconst formatDate = (parameter) => {\n  // parameter可以是表示时间字符串 如'2018/01/01'或'2018-01-01'或Date\n  // 返回表示时间的字符串格式'2018-01-01'\n  const date = (parameter && parameter instanceof Date)\n    ? parameter\n    : new Date(String(parameter));\n  const result = (date.getTime()) ? date.toLocaleDateString().replace(/\\//g, '-') : '';\n  return result;\n};\n\nconst formatTime = (date) => {\n  if (!(date instanceof Date)) { throw new TypeError(`formatTime 参数date不能是${date}`); }\n  const str = date.toTimeString().match(/^\\S+/)[0];\n  return str;\n};\n\nconst isValidDate = (date) => {\n  const result = date && date instanceof Date && date.getTime();\n  return result;\n};\n\nconst newPromise = () => new Promise(resolve => resolve(1));\n\nconst differDay = (datea, dateb) => {\n  // 两个日期相差几日 返回值是一个整数 1代表dateb是datea的后一天 -1代表dateb是datea的前一天 0代表是同一天\n  if (!(datea instanceof Date) || !(dateb instanceof Date)) {\n    throw new TypeError(`differDay的参数不能是 ${datea} 和 ${dateb}`);\n  }\n  const dateaStart = datea;\n  const datebStart = dateb;\n  const msecs = datebStart.getTime() - dateaStart.getTime();\n  const days = msecs / 86400000;\n  return days;\n};\n\nconst isEmptyString = (content) => {\n  // 是否是空Falsely或空字符串\n  const isFalsely =\n    (content === null) ||\n    (content === undefined) ||\n    (content === false) ||\n    (content === []) ||\n    (content === {});\n  const isEmpty = !String(content).match(/\\S/);\n  return isFalsely || isEmpty;\n};\n\nconst divisio = (ary, callback) => {\n  // 把一个数组按照callback((item)=>{})分成两部分\n  // 返回一个数组包含2个数组，callback返回true的在第一个一个数组，其他的在第二个数组\n  if (!(ary instanceof Array)) { throw new TypeError(`divisio ${ary} 不是Array`); }\n  if (!(callback instanceof Function)) { throw new TypeError(`divisio ${callback} 不是Function`); }\n  const result = [[], []];\n  ary.forEach((item) => {\n    const allot = callback(item);\n    if (allot) {\n      result[0].push(item);\n    } else {\n      result[1].push(item);\n    }\n  });\n  return result;\n};\n\nconst flat = (ary, deep) => {\n  // 递归到指定深度将所有子数组连接，并返回一个新数组。\n  if (!(ary instanceof Array)) { throw new TypeError(`flat ${ary} 不是Array`); }\n  if (deep && (!Number.isSafeInteger(deep) || deep < 1)) { throw new TypeError(`flat ${deep} 不是Integer或deep < 1`); }\n  let result = ary;\n  const times = deep || 1;\n  const core = (array) => {\n    const container = [];\n    array.forEach((item) => {\n      if (item instanceof Array) {\n        item.forEach(i => container.push(i));\n      } else {\n        container.push(item);\n      }\n    });\n    return container;\n  };\n  for (let index = 0; index < times; index += 1) {\n    result = core(result);\n  }\n  return result;\n};\n\nexport default {\n  isElement,\n  isKeyEnter,\n  isString,\n  isFunction,\n  isEmptyString,\n  newPromise,\n  formatDate,\n  formatTime,\n  now,\n  isValidDate,\n  differDay,\n  divisio,\n  flat,\n};\n","import Utils from './utils';\n\nconst ajax = {\n  get: (url, callback) => {\n    // ajax get\n    if (typeof url !== 'string') { throw new TypeError('路径错误'); }\n    if (!(callback instanceof Function)) { throw new TypeError('回调函数错误'); }\n    const xmlhttp = (window.XMLHttpRequest) ? new XMLHttpRequest() : new window.ActiveXObject('Microsoft.XMLHTTP');\n    xmlhttp.open('GET', url, true);\n    xmlhttp.send();\n    xmlhttp.onreadystatechange = (res) => {\n      if (xmlhttp.readyState !== 4 || xmlhttp.status !== 200) { return false; }\n      return callback(res);\n    };\n  },\n};\n\nconst promiseAjax = {\n  get: (url) => {\n    // promise ajax get\n    if (!Utils.isString(url)) { throw new TypeError('参数url是路径 字符串类型'); }\n    const promise = new Promise((resolve) => {\n      ajax.get(url, (result) => {\n        resolve(result.target.response);\n      });\n    });\n    return promise;\n  },\n};\n\nexport default promiseAjax;\n","import Dom from '../dom';\nimport Utils from '../utils';\nimport promiseAjax from '../ajax';\n\n// 保存所有创建的组件\nconst components = new Set();\n\nlet counter = 100001;\nconst takeId = () => {\n  counter += 1;\n  return counter;\n};\n\nclass Component {\n  // script来自js文件  template和style 来自html文件\n  constructor(param) {\n    // param.query是Dom.of参数\n    // param.template是HtmlElement\n    // param.style是<style>\n    if (typeof param !== 'object') { throw new TypeError('param应该是一个object'); }\n    if (!Utils.isElement(param.template)) { throw new TypeError('param.template应该是一个HtmlElement'); }\n    const result = Object.assign(this, param);\n\n    // 在页面插入的位置\n    if (Utils.isString(this.query)) {\n      Dom.of(this.template).attr('data-c-query', this.query);\n    }\n    const position = Dom.of(result.query).dom || Dom.of(`*[data-c-query=${result.query}]`).dom;\n    if (!position) {\n      throw new TypeError(`选择器 ${result.query} 未找到匹配项`);\n    } else {\n      result.query = position;\n    }\n\n    // 填充param.selectors 填充this.elements\n    result.elements = {};\n    if (result.selectors && (typeof result.selectors === 'object')) {\n      // 接受{}类型的属性param.selectors 遍历param.selectors的键，取每个键的值作为querySelector参数，\n      // 然后找到对应的HTMLElement集合并设置在this.elements属性中\n      // 例如存在param.selectors.foo = '.foo' 则得到this.elements.foo = querySelector('.foo')\n      const selectorNames = Object.keys(result.selectors);\n      const elements = {};\n      selectorNames.forEach((name) => {\n        const selector = result.selectors[name];\n        if (selector && Utils.isString(selector)) {\n          const element = result.template.querySelector(selector);\n          if (Utils.isElement(element)) {\n            Dom.of(element).attr('data-c-selector', name);\n            elements[name] = element;\n          }\n        }\n      });\n      if (Object.keys(elements).length > 0) {\n        elements.template = result.template;\n        result.elements = elements;\n      }\n    }\n\n    // parent\n    let parent = result.parent;\n    Object.defineProperty(result, 'parent', {\n      enumerable: true,\n      configurable: true,\n      get: () => {\n        return parent;\n      },\n      set: (cpt) => {\n        if (cpt === parent) { return parent; }\n        if (cpt !== undefined && cpt !== null && !Component.isComponent(cpt)) {\n          throw new TypeError(`父组件不可以为${cpt}`);\n        }\n        if (Component.isComponent(parent)) {\n          parent.components.delete(result);\n        }\n        if (cpt) {\n          parent = cpt;\n          parent.components.add(result);\n        } else {\n          parent = null;\n        }\n        return parent;\n      },\n    });\n    result.parent = parent;\n\n    // 子组件components\n    let componentsSet;\n    if (!result.components) {\n      componentsSet = new Set();\n    } else if ((result.components instanceof Array) || (result.components instanceof Set)) {\n      componentsSet = new Set([...result.components]);\n    } else {\n      throw new TypeError(`${param.components}不能作为子组件集`);\n    }\n    result.components = componentsSet;\n\n    // present\n    result.present = result.present || {};\n\n    // 确保param.data符合设定\n    if (!(result.data instanceof Function)) throw new TypeError('缺少data属性或data不是Function类型');\n    const data = result.data();\n    result.data = Object.assign({}, data);\n    if ((data instanceof Array) || (typeof data !== 'object')) {\n      throw new TypeError('data应该返回一个Object');\n    } else {\n      const keys = Object.keys(result.data);\n      const isHasFunc = keys.some((key) => {\n        const isFunc = result.data[key] instanceof Function;\n        return isFunc;\n      });\n      if (isHasFunc) { throw new TypeError('data返回的Object中不能含有Function'); }\n    }\n    // watch data\n    // const insideData = Object.assign({}, data);\n    if (result.watch instanceof Function) {\n      const watchs = result.watch();\n      if ((watchs instanceof Object) && (!(watchs instanceof Array))) {\n        const watchKeys = Object.keys(watchs);\n        const dataKeys = Object.keys(data);\n        const keys = watchKeys.filter(key => dataKeys.includes(key));\n        keys.forEach((key) => {\n          Object.defineProperty(result.data, key, {\n            enumerable: true,\n            get: () => data[key],\n            set: (val) => {\n              data[key] = val;\n              watchs[key]();\n            },\n          });\n        });\n      }\n    }\n\n    // 索引和标识\n    if (!result.name) {\n      const name = result.url.match(/([^/]+)\\.html/)[1];\n      result.name = name;\n    }\n\n    // 设置this.componentId属性\n    result.setComponentId();\n\n    // 绑定param.methods下的function的this指向\n    if (result.methods) {\n      const methods = {};\n      const methodNames = Object.keys(result.methods);\n      methodNames.forEach((methodName) => {\n        const method = result.methods[methodName];\n        if (typeof method === 'function') {\n          methods[methodName] = method.bind(result);\n        }\n      });\n      result.methods = methods;\n    }\n\n    this.formatChildren()\n      .then(() => this.lifeCycle());\n\n    components.add(result);\n    return result;\n  }\n  formatChildren() {\n    // 处理子组件components中不是组件实例化对象的对象\n    let promise = new Promise(resolve => resolve(1));\n    const params = Array.from(this.components).filter(item => !(item instanceof Component));\n    params.forEach((item) => {\n      const param = Object.assign({}, item);\n      // 传递present child.passon = [] 若是空数组则parsent全部传递，否则查找键名传递\n      if (param.passon instanceof Array) {\n        let passPresent = {};\n        if (param.passon.length === 0) {\n          passPresent = this.present;\n        } else {\n          const presentKeys = Object.keys(this.present);\n          const passKeys = param.passon.filter(key => ((typeof key === 'string') && presentKeys.includes(key)));\n          passKeys.forEach((key) => {\n            passPresent[key] = this.present[key];\n          });\n        }\n        param.present = passPresent;\n      }\n      // 传递present\n      promise = promise.then(() => {\n        // 取消router添加的 '/#/'\n        const originReg = /^[^#]+/;\n        const origin = window.location.href.match(originReg);\n        const rel = param.url.replace(/^\\u002e\\u002f/, '');\n        const url = `${origin}${rel}`;\n        const ajax = Component.pjaxFormatHtml(url);\n        return ajax;\n      }).then(({ template, style }) => {\n        const query = this.template.querySelector(param.query);\n        if (!Dom.isElement(query)) { throw new Error(`子组件插入位置未找到${item.query}`); }\n        param.query = query;\n        param.template = template;\n        param.style = style;\n        param.parent = this;\n        const cpt = Component.of(param);\n        const selector = Dom.of(query).attr('data-c-selector');\n        if (selector) {\n          this.elements[selector] = cpt.template;\n        }\n        this.components.delete(item);\n        this.components.add(cpt);\n        return cpt;\n      });\n    });\n    return promise;\n  }\n  lifeCycle() {\n    // 生命周期\n    if (Utils.isFunction(this.created)) {\n      this.created();\n    }\n    this.implant();\n    if (Utils.isFunction(this.implanted)) {\n      this.implanted();\n    }\n  }\n\n  refresh(present) {\n    if (present) {\n      this.present = present;\n    }\n    if (Utils.isFunction(this.created)) {\n      this.created();\n    }\n    if (Utils.isFunction(this.implanted)) {\n      this.implanted();\n    }\n  }\n\n  static findBy(query, cpt) {\n    // 查找单个组件\n    // query是对象类型表示查找选项，可选componentId和name,例如{componentId: 123, name: 'name'}\n    // cpt 是组件实例化的对象，如果存在该参数，则从cpt.components查找，否则从Component.components查找\n    const keys = Object.keys(query);\n    const keyName = keys.find(key => (key === 'name'));\n    const keyId = keys.find(key => (key === 'componentId'));\n    if (!keyName && !keyId) { throw new Error(`查询参数无效${JSON.stringify(query)}`); }\n    if (arguments.length > 1 && !(cpt instanceof Component)) { throw new TypeError(`不是有效组件${JSON.stringify(cpt)}`); }\n    if (keyId && !Number.isSafeInteger(query.componentId)) { throw new TypeError(`不是有效组件componentId ${query.componentId}`); }\n    let result = null;\n    const set = (arguments.length > 1) ? cpt.components : components;\n    const cpts = Array.from(set);\n    for (let index = 0; index < cpts.length; index += 1) {\n      const item = cpts[index];\n      const matchName = !(keyName) || (query.name === item.name);\n      const matchCId = !(keyId) || (Number(query.componentId) === Number(item.componentId));\n      const isMatch = matchName && matchCId;\n      if (isMatch) {\n        result = item;\n        break;\n      }\n    }\n    return result;\n  }\n\n  findBy(query) {\n    // 查找单个组件\n    // query是对象类型表示查找选项，可选componentId和name,例如{componentId: 123, name: 'name'}\n    return Component.findBy(query, this);\n  }\n\n  static where(query, cpt) {\n    // 查找多个组件\n    // query是对象类型表示查找选项，可选componentId和name,例如{componentId: 123, name: 'name'}\n    // cpt 是组件实例化的对象，如果存在该参数，则从cpt.components查找，否则从Component.components查找\n    if (!query.name && !query.componentId) { throw new Error(`查询参数无效${JSON.stringify(query)}`); }\n    if (arguments.length > 1 && !(cpt instanceof Component)) { throw new TypeError(`不是有效组件${JSON.stringify(cpt)}`); }\n    const set = (arguments.length > 1) ? cpt.components : components;\n    const cpts = Array.from(set);\n    const filter = cpts.filter((item) => {\n      const matchName = !(query.name) || query.name === item.name;\n      const matchCId = !(query.componentId) || query.componentId === item.componentId;\n      const isMatch = matchName && matchCId;\n      return isMatch;\n    });\n    return filter;\n  }\n\n  where(query) {\n    // 查找多个组件\n    // query是对象类型表示查找选项，可选componentId和name,例如{componentId: 123, name: 'name'}\n    return Component.where(query, this);\n  }\n\n  addEventListener(typeArg, callback) {\n    // 添加事件\n    this.template.addEventListener(typeArg, callback);\n  }\n\n  dispatchEvent(typeArg, detail) {\n    // 派发事件\n    const event = new CustomEvent(typeArg, { detail });\n    this.template.dispatchEvent(event);\n  }\n\n  setComponentId() {\n    // 设置 data-component-id 属性\n    this.componentId = String(takeId());\n    this.template.setAttribute('data-c-id', `c${this.componentId}`);\n    this.style.setAttribute('data-c-id', `c${this.componentId}`);\n    const recursive = (element) => {\n      if (!(element instanceof HTMLElement) || (element.childElementCount < 1)) { return false; }\n      element.children.forEach((child) => {\n        child.setAttribute('data-c-id', `c${this.componentId}`);\n        recursive(child);\n      });\n      return element;\n    };\n    recursive(this.template);\n    return this;\n  }\n\n  replaceGeneralScopedStyles(stylesContent) {\n    // stylesContent是常规style 如 \"div{} li{}\"\n    // 返回 \"div[data-c-id=c${this.componentId}]{} li[data-c-id=c${this.componentId}]{}\"\n    const regGeneralStyleCompleteStructure = /[#\\u002e\\u002aA-Za-z][^{}]*{([^{}]*{[^{}]*})*[^{}]*}/g;\n    const styles = stylesContent.match(regGeneralStyleCompleteStructure);\n    styles.forEach((styleContent, styleIndex) => {\n      const rep = this.replaceGeneralScopedStyle(styleContent);\n      styles[styleIndex] = rep;\n    });\n    const result = styles.join(' ');\n    return result;\n  }\n\n  replaceGeneralScopedStyle(style) {\n    // 是单个结构完整的style 如： .klass: hover ul > li[name = x]: before{}\n    // 返回 ...:hover ul[data-c-id=c${this.componentId}]> li\n    const selectorsContents = style.replace(/\\s*{.*$/, '').replace(/^\\s*/, '').split(',');\n    selectorsContents.forEach((singleSelectorsContent, selectorIndex) => {\n      // singleSelectorsContent是单个结构完整的选择器 如： .klass:hover ul>li[name=x]:before\n      const regSingleSelector = /[#\\u002a\\u002eA-Za-z][^\\s+~>{]*/g; // 如  [\".klass:hover\", \"ul>\", \"li[name=x]:before\"]\n      const repConent = singleSelectorsContent.replace(regSingleSelector, (selector) => {\n        // selector是单个选择器如 .klass:hover 或 ul 或 li[name=x]:before\n        const regNoPseudo = /([#\\u002a\\u002eA-Za-z][^:]*)/;\n        const repSingleSelector = selector.replace(regNoPseudo, (selectorNoPseudo) => {\n          // repSingleSelector是将选择器主体末尾，伪选择器前加上[data-c-id=c${this.componentId}]\n          // 如从 li[name=x]:before => li[name=x][data-c-id=c${this.componentId}]:before\n          const repNoPseudo = `${selectorNoPseudo}[data-c-id=c${this.componentId}]`;\n          return repNoPseudo;\n        });\n        return repSingleSelector;\n      });\n      // 替换.klass:hover ul>li[name=x]:before 到.klass[data-c-id=c${this.componentId}]。。。\n      selectorsContents[selectorIndex] = repConent;\n    });\n    const repselectorsContents = selectorsContents.join(',');\n    const result = style.replace(/^[^{}]*{/, () => {\n      const rep = `${repselectorsContents} {`;\n      return rep;\n    });\n    return result;\n  }\n\n  handleScopedStyle() {\n    // 处理scoped style 把每个选择器后都加上[data-c-id=c${this.componentId}]\n    // unicode *#. \\u002a\\u0023\\u002e\n    const isScoped = this.style.getAttribute('scoped') || (this.style.getAttribute('scoped') === '');\n    if (!isScoped) { return false; }\n    // 去掉注释\n    const commentReg = /\\u002f\\u002a(\\u002f\\u002a|[^\\u002a])*\\u002a\\u002f/g;\n    const removeComments = this.style.innerHTML.replace(commentReg, '');\n    const content = removeComments;\n    // 去掉换行\n    const compressed = content.replace(/\\n/g, '').replace(/\\s+/g, ' ');\n    const regStyleCompleteStructure = /(@keyframes|@media|[#\\u002e\\u002aA-Za-z])[^{}]*{([^{}]*{[^{}]*})*[^{}]*}/g;\n    const styles = compressed.match(regStyleCompleteStructure);\n    if (!styles) { return false; }\n    styles.forEach((singleStyle, styleIndex) => {\n      let repConent;\n      // singleStyle是单条结构完整的style 如: selector {}\n      if (singleStyle.match('@keyframes')) {\n        // css 动画 如：@keyframes myfirst{ from { background: red; }to { background: yellow; }}\n        repConent = singleStyle;\n      } else if (singleStyle.match('@media')) {\n        // 媒体查询 如：@media screen and (max-width: 300px) { body {background-color:lightblue; }}\n        const mediaHeadReg = /^[^@]*@media[^{]*{/;\n        const mediaHead = singleStyle.match(mediaHeadReg)[0];\n        const styleContents = singleStyle.replace(mediaHead, '').replace(/}[^}]*$/, '');\n        // styleContents是style主体 body {background-color:lightblue; }\n        const replacedContents = this.replaceGeneralScopedStyles(styleContents);\n        const mediaContent = `${mediaHead} ${replacedContents} }`;\n        repConent = mediaContent;\n      } else {\n        // 常规单条style 如#id{} 或.class{} 或div{} 或div::before{} 或div:hover::before{}\n        repConent = this.replaceGeneralScopedStyle(singleStyle);\n      }\n      styles[styleIndex] = repConent;\n    });\n    const resultStyleHTML = styles.join(' ');\n    this.style.innerHTML = resultStyleHTML;\n    return this;\n  }\n\n  implant() {\n    // 根据this.query嵌入页面\n    const isScoped = this.style.getAttribute('scoped') || (this.style.getAttribute('scoped') === '');\n    Dom.of(this.query).replace(this.template);\n    // 处理style\n    if (this.style) {\n      if (isScoped) {\n        // 处理scoped style\n        this.handleScopedStyle();\n      }\n      // 插入 style\n      const existStyle = document.querySelector(`style[data-c-id=c${this.componentId}]`);\n      if (existStyle) {\n        document.querySelector('head').replaceChild(this.style, existStyle);\n      } else {\n        document.querySelector('head').appendChild(this.style);\n      }\n    }\n    return this;\n  }\n\n  static pjaxFormatHtml(url) {\n    // promiseAjax请求html文件 返回一个对象{template, style} template是该html文件的<body>下第一个子元素 style是第一个<style>\n    if (!url || (typeof url !== 'string')) {\n      throw new TypeError(`${url}不是有效的html文件地址`);\n    }\n    const promise = promiseAjax.get(url).then((result) => {\n      const html = document.createElement('html');\n      html.innerHTML = result;\n      const styles = html.querySelectorAll('style');\n      const body = html.querySelector('body');\n      if (styles.length > 1) { throw new TypeError('至多可以有一个<style>元素'); }\n      if (body.childElementCount !== 1) { throw new TypeError('<body>内应有且只有一个根元素'); }\n      const template = body.firstElementChild;\n      const style = styles[0] || document.createElement('style');\n      return { template, style };\n    });\n    return promise;\n  }\n\n  static of(param) {\n    return new Component(param);\n  }\n\n  static pjaxCreate(param) {\n    // 通过参数param.url标示为html地址， 通过promiseAjax获取html并创建Component实例对象\n    if (!Utils.isString(param.url)) { throw new TypeError('param.url应该是字符串类型html文件地址'); }\n    const promise = Component.pjaxFormatHtml(param.url).then((format) => {\n      const parameter = Object.assign(param, format);\n      const cpt = Component.of(parameter);\n      return cpt;\n    });\n    return promise;\n  }\n\n  // 显示全部实例化的组件\n  static all() {\n    return components;\n  }\n\n  static isComponent(component) {\n    // 判断是否是一个组件实例化对象\n    return component && (component instanceof Component);\n  }\n\n  appendChild(want, element, position) {\n    // 添加一个子组件\n    // want是组件参数或组件实例化对象\n    // element应是this.template或其子HTMLElement元素\n    // position是位置 -1表示成为最后一个子元素，0表示成为第一个子元素，1表示成为第二个子元素\n    // 当position<0或大于指定元素的子元素数时，插入为最后一个元素\n    // 返回值promise resolve(want)\n    return Component.appendComponent(want, this, element, position);\n  }\n  replaceChild(want, exist) {\n    // 替换子元素\n    // want是组件参数或组件实例化对象\n    // exist是已存在子元素\n    // 返回值promise resolve(want)\n    const promise = Component.replaceComponent(want, exist).then((cpt) => {\n      cpt.parent = this;\n      return cpt;\n    });\n    return promise;\n  }\n  removeChild(exist) {\n    // 移除子组件\n    // 返回值promise resolve(exist)\n    if (!this.components.has(exist)) {\n      throw new TypeError(`不是子组件${JSON.stringify(exist)}`);\n    }\n    return Component.removeComponent(exist);\n  }\n\n  replace(want) {\n    // 将自己替换为另一个组件参数或实例化的组件\n    // 返回值promise resolve(want)\n    return Component.replaceComponent(want, this);\n  }\n\n  static appendComponent(want, exist, element, position) {\n    // 添加一个组件\n    // want是组件参数或组件实例化对象\n    // exist是父组件\n    // element应是exist上的一个HTMLElement元素\n    // position是位置 -1表示成为最后一个子元素，0表示成为第一个子元素，1表示成为第二个子元素\n    // 当position<0或大于指定元素的子元素数时，插入为最后一个元素\n    // 返回值promise resolve(want)\n    if (!Component.isComponent(exist)) {\n      throw new TypeError(`${exist}不是组件`);\n    }\n    const validElement = Dom.isElement(element) &&\n      (exist.template.isSameNode(element) || Dom.of(element).hasParent(exist.template));\n    if (!validElement) {\n      throw new TypeError(`${element}不是组件id:${exist.componentId}的子元素`);\n    }\n    if (!Number.isSafeInteger(position)) {\n      throw new TypeError(`不是整数${position}`);\n    }\n    let promise = new Promise(resolve => resolve(want));\n    if (!(want instanceof Component)) {\n      const param = Object.assign(want);\n      promise = Component.pjaxFormatHtml(param.url).then(({ template, style }) => {\n        param.query = template;\n        param.template = template;\n        param.style = style;\n        const cpt = Component.of(param);\n        return cpt;\n      });\n    }\n    promise = promise.then((cpt) => {\n      // 把template插入到position的位置\n      Dom.of(element).appendAccurate(cpt.template, position);\n      const head = Dom.of('head');\n      if (!head.hasChild(cpt.style)) {\n        head.append(cpt.style);\n      }\n      cpt.parent = exist;\n      return cpt;\n    });\n    return promise;\n  }\n\n  static replaceComponent(want, exist) {\n    // 将一个组件实例化对象替换为另一个组件参数或实例化的组件\n    // 返回值promise resolve(want)\n    if (!Component.isComponent(exist)) { throw new TypeError(`${exist}不是组件实例化对象`); }\n    let promise = new Promise(resolve => resolve(want));\n    if (!(Component.isComponent(want))) {\n      if (!Utils.isString(want.url)) { throw new TypeError('param.url应该是字符串类型html文件地址'); }\n      promise = Component.pjaxFormatHtml(want.url).then(({ template, style }) => {\n        want.template = template;\n        want.style = style;\n        want.query = exist.template;\n        const cpt = Component.of(want);\n        return cpt;\n      });\n    }\n    promise = promise.then((cpt) => {\n      Dom.of(exist.template).replace(cpt.template);\n      Dom.of(exist.style).replace(cpt.style);\n      cpt.parent = exist.parent;\n      return cpt;\n    });\n    return promise;\n  }\n\n  static removeComponent(component) {\n    // 移除一个组件\n    // component是组件实例化对象\n    // 返回值promise resolve(component)\n    if (!Component.isComponent(component)) { throw new TypeError(`${component}不是一个组件`); }\n    const clearTemplate = (cpt) => {\n      if (!Component.isComponent(cpt)) { return false; }\n      const removed = Dom.of(`*[data-c-id=c${cpt.componentId}]`).remove();\n      if (!removed) { return false; }\n      return clearTemplate(cpt);\n    };\n    const destroy = (cpt) => {\n      if (!Component.isComponent(cpt)) { return false; }\n      Dom.of(cpt.style).remove();\n      components.delete(cpt);\n      cpt.components.forEach(item => destroy(item));\n      cpt.components.clear();\n      cpt.parent = null;\n      clearTemplate(cpt);\n      if (cpt.removed && cpt.removed instanceof Function) { cpt.removed(); }\n      return cpt;\n    };\n    const promise = new Promise((resolve) => {\n      destroy(component);\n      Dom.of(component.template).remove();\n      resolve(component);\n    });\n    return promise;\n  }\n}\n\nComponent.components = components;\nwindow.Component = Component;\n\n\nexport default Component;\n\n// todo router 把没用的组件占用内存释放\n// todo 逐渐替换pjaxCreate 实例对象所有方法改为返回promise\n// 改为new Component(param) 立即返回一个Component实例对象，该实例对象有state属性标识是否加载完，若没有则先加载\n\n// todo param有parent属性处理了 是否可以在参数指定parent属性？\n// todo Component.replace(param, exist)\n// 重构组件操作方法 全部实例对象方法改为返回promise\n// todo 提取handleScopedStyle为私有方法\n// todo 改为有new进行实例化 立即返回实例化对象，该实例化有state属性判断状态，获取html改为在实例化方法内\n// todo custom alert compponent 在新建或更新mission时 content为空时 应该有提示\n// todo 应该有一个向组件传递数据的方法 像HTMLElement.innerHTML一样 监视Component.present和Component.data 通过组件参数watch配置\n// todo 组件事件监听和派发方法 Component.on(type, callback) Component.sent(type, detail) 实例化后组件内和父组件可以调用\n// todo css scoped注释\n// todo css scoped @media query\n","import utils from '../utils';\nimport Dom from '../dom';\n\nconst param = {\n  query: 'left-menu',\n  url: './assets/templates/leftMenu.html',\n  name: 'leftMenu',\n  data() {\n    return {\n      date: utils.now,\n    };\n  },\n  passon: [],\n  selectors: {\n    date: '.date',\n    time: '.time',\n  },\n  methods: {\n    init() {\n      if (this.data.inited) { return false; }\n      this.methods.fillTime();\n      this.data.inited = 1;\n      return this;\n    },\n    fillTime() {\n      const fill = () => {\n        // 左侧时间板\n        const now = new Date();\n        const date = utils.formatDate(now);\n        const time = utils.formatTime(now);\n        if (this.data.dateStr !== date) {\n          this.data.dateStr = date;\n          Dom.of(this.elements.date).attr('text', date);\n        }\n        Dom.of(this.elements.time).attr('text', time);\n        this.data.fillTimeOut = window.setTimeout(fill, 1000);\n      };\n      fill();\n    },\n  },\n  created() {\n    this.methods.init();\n  },\n};\nexport default param;\n","\nconst isElement = (element) => {\n  const result = element && (element.nodeType === 1);\n  return result;\n};\n\nconst isString = (str) => {\n  const result = str && (typeof str === 'string');\n  return result;\n};\n\nconst getParent = (element) => {\n  if (!isElement(element)) return false;\n  return element.parentNode;\n};\n\nconst getParents = (element) => {\n  if (!isElement(element)) return false;\n  const result = [];\n  let parent = element;\n  for (let index = 0; index < 999; index += 1) {\n    parent = getParent(parent);\n    if (!isElement(parent)) break;\n    result.push(parent);\n  }\n  return result;\n};\n\nclass Dom {\n  constructor(query) {\n    if (typeof query === 'string') {\n      const eleReg = /^<(.+)>$/;\n      const eleMatch = query.match(eleReg);\n      if (eleMatch) {\n        const tagName = eleMatch[1].toLocaleUpperCase();\n        this.dom = document.createElement(tagName);\n      } else {\n        return document.querySelectorAll(query);\n      }\n    } else if (query instanceof Dom) {\n      this.dom = query.dom;\n    } else if (isElement(query) || (query === document)) {\n      this.dom = query;\n    } else {\n      console.warn(query);\n      throw new TypeError('无效参数');\n    }\n    return this;\n  }\n\n  static of(str) {\n    return new Dom(str);\n  }\n\n  attr(key, value) {\n    if (!key || !isString(key)) throw new TypeError('没有key参数');\n    let result = this;\n    if (value !== undefined) {\n      this.dom.setAttribute(key, `${value}`);\n    } else {\n      result = this.dom.getAttribute(key);\n    }\n    return result;\n  }\n\n  addClass(content) {\n    if (!content || (typeof content !== 'string')) throw new TypeError('参数应该是字符串');\n    const ary = content.split(' ');\n    ary.forEach((value) => {\n      if (value) {\n        this.dom.classList.add(value);\n      }\n    });\n    return this;\n  }\n\n  removeClass(content) {\n    if (!content || (typeof content !== 'string')) throw new TypeError('参数应该是字符串');\n    const ary = content.split(' ');\n    ary.forEach((value) => {\n      if (value) {\n        this.dom.classList.remove(value);\n      }\n    });\n    return this;\n  }\n\n  hasClass(content) {\n    if (!content || (typeof content !== 'string')) throw new TypeError('参数应该是字符串');\n    if (content.match(' ')) throw new TypeError('参数不能含有空格');\n    return this.dom.classList.contains(content);\n  }\n\n  toggleClass(content) {\n    if (!content || (typeof content !== 'string')) throw new TypeError('参数应该是字符串');\n    if (this.hasClass(content)) {\n      this.removeClass(content);\n    } else {\n      this.addClass(content);\n    }\n    return this;\n  }\n\n  append(object) {\n    const element = (object instanceof Dom) ? object.dom : object;\n    if (!element || (element.nodeType !== 1)) throw new TypeError('参数不是html元素');\n    this.dom.appendChild(element);\n    return this;\n  }\n\n  remove(object) {\n    if (!object) {\n      this.dom.remove();\n    } else if (isElement(object)) {\n      this.dom.removeChild(object);\n    } else if (isString(object)) {\n      const element = this.dom.querySelector(object);\n      this.dom.removeChild(element);\n    }\n    return this;\n  }\n\n  text(content) {\n    this.dom.innerText = content;\n    return this;\n  }\n\n  html(content) {\n    this.dom.innerHTML = content;\n    return this;\n  }\n\n  find(query) {\n    return this.dom.querySelector(query);\n  }\n\n  children(query) {\n    return this.dom.querySelectorAll(query);\n  }\n\n  parent() {\n    const parent = this.dom.parentNode;\n    const result = (parent && (parent.nodeType === 1)) ? parent : undefined;\n    return result;\n  }\n\n  parents(query) {\n    const parents = getParents(this.dom);\n    let result = [];\n    if (query && isString(query)) {\n      const all = document.querySelectorAll(query);\n      all.forEach((parent) => {\n        if (parents.includes(parent)) {\n          result.push(parent);\n        }\n      });\n    } else {\n      result = parents;\n    }\n    return result;\n  }\n\n  on(event, callback) {\n    this.dom.addEventListener(event, callback);\n    return this;\n  }\n\n  off(event, callback) {\n    this.dom.removeEventListener(event, callback);\n    return this;\n  }\n\n  static isElement(element) {\n    return element && (element.nodeType === 1);\n  }\n  hasParent(element) {\n    if (!Dom.isElement(element)) return false;\n    const parents = this.parents();\n    let result = false;\n    parents.forEach((parent) => {\n      if (element.isSameNode(parent)) result = true;\n    });\n    return result;\n  }\n}\n\nexport default Dom;\n","const defaultMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nconst isSafeYear = (number) => {\n  const isValid = Number.isInteger(number) && (number > 1900) && (number < 5001);\n  return isValid;\n};\n\nconst isSafeMonth = (number) => {\n  const isValid = Number.isInteger(number) && (number >= 0) && (number < 12);\n  return isValid;\n};\n\nclass CustomDate {\n  constructor(date) {\n    if (!date || !(date instanceof Date)) throw new TypeError('参数应是一个Date实例对象');\n    this.year = date.getFullYear();\n    this.month = date.getMonth();\n    this.day = date.getDate();\n    return this;\n  }\n  backOneMonth() {\n    // 月份 -1\n    this.month -= 1;\n    if (this.month < 0) {\n      this.year -= 1;\n      this.month = 11;\n    }\n    return this;\n  }\n  aheadOneMonth() {\n    // 月份 +1\n    this.month += 1;\n    if (this.month > 11) {\n      this.year += 1;\n      this.month = 0;\n    }\n    return this;\n  }\n  toDate() {\n    const result = new Date(this.year, this.month, this.day);\n    return result;\n  }\n  static of(date) {\n    return new CustomDate(date);\n  }\n  reset(date) {\n    // 重设日期\n    const result = CustomDate.of(date);\n    if (!result) throw new TypeError('哪里出现了问题');\n    this.year = result.year;\n    this.month = result.month;\n    this.day = result.day;\n    return this;\n  }\n  static getMonths(yearNumber) {\n    // 用一个数组表示某一年的12月每月有多少天\n    if (!isSafeYear(yearNumber)) throw new TypeError('参数应该是一个数字，有效值1901-5000');\n    const months = defaultMonths;\n    const isLeapYear = (yearNumber % 4 === 0);\n    if (isLeapYear) months[1] = 29;\n    return months;\n  }\n\n  static getDaysCount(year, month) {\n    // 获得某一个月的天数\n    if (!isSafeYear(year)) throw new TypeError('参数应该是一个数字，有效值1901-5000');\n    if (!isSafeMonth(month)) throw new TypeError('参数应该是一个数字，有效值0-11');\n    const months = CustomDate.getMonths(year);\n    const count = months[month];\n    return count;\n  }\n  static getWeekArray(date) {\n    // 用数组形式表示一周，从周一开始 [30, 1, 2, 3, 4, 5, 6]\n    if (!(date instanceof Date)) throw new TypeError('参数应该是一个Date实例对象');\n    const week = [];\n    const daysCount = CustomDate.getDaysCount(date.getFullYear(), date.getMonth());\n    const prevThe1st = new Date(date.getFullYear(), (date.getMonth() - 1), 1);\n    const prevDaysCount = CustomDate.getDaysCount(prevThe1st.getFullYear(), prevThe1st.getMonth());\n    const weekStart = date.getDate() - date.getDay();\n    for (let i = 0; i < 7; i += 1) {\n      let dayNum = weekStart + i;\n      if (dayNum > daysCount) {\n        dayNum -= daysCount;\n      } else if (dayNum < 1) {\n        dayNum += prevDaysCount;\n      }\n      week.push(dayNum);\n    }\n    return week;\n  }\n  static getMonthArray(date) {\n    // 用数组形式表示一个月 [[30, 1, 2, 3, 4, 5, 6], [7,8,9,10,11,12,13], ...]\n    if (!date || !(date instanceof Date)) throw new TypeError('参数应该是一个Date实例对象');\n    const month = [];\n    const daysCount = CustomDate.getDaysCount(date.getFullYear(), date.getMonth());\n    const thisWeek = CustomDate.getWeekArray(date);\n    month.push(thisWeek);\n    for (let i = 0; i < 5; i += 1) {\n      const prevSaturday = (date.getDate() - date.getDay()) - 1 - (i * 7);\n      if (prevSaturday > 0) {\n        const prevSaturdayDate = new Date(date.getFullYear(), date.getMonth(), prevSaturday);\n        const prevWeek = CustomDate.getWeekArray(prevSaturdayDate);\n        month.unshift(prevWeek);\n      }\n      const nextSunday = (date.getDate() - date.getDay()) + 7 + (i * 7);\n      if (nextSunday <= daysCount) {\n        const nextSundayDate = new Date(date.getFullYear(), date.getMonth(), nextSunday);\n        const nextWeek = CustomDate.getWeekArray(nextSundayDate);\n        month.push(nextWeek);\n      }\n    }\n    return month;\n  }\n}\n\nexport default CustomDate;\n","import dom from './dom';\nimport CustomDate from './customDate';\n\nlet isbindTurnOff = 0;\nlet isWindowResize = 0;\n\nconst getFixedTop = (element) => {\n  // 相对body的top\n  if (!dom.isElement(element)) throw new TypeError('参数应是HTML Element');\n  let result = 0;\n  let parent = element;\n  while (dom.isElement(parent) && parent.tagName !== 'body' && parent.tagName !== 'html') {        \n    result += parent.offsetTop;\n    parent = parent.offsetParent;\n  }\n  return result;\n};\n\nconst getFixedLeft = (element) => {\n  // 相对body的top\n  if (!dom.isElement(element)) throw new TypeError('参数应是HTML Element');\n  let result = 0;\n  let parent = element;\n  while (dom.isElement(parent) && parent.tagName !== 'body' && parent.tagName !== 'html') {\n    result += parent.offsetLeft;\n    parent = parent.offsetParent;\n  }\n  return result;\n};\n\nconst getResponsiveTop = (element, reference) => {\n  // 或许响应式的top，如果下方空间不够且上方空间够则在上方，否则在下方\n  if (!dom.isElement(element) || !dom.isElement(reference)) throw new TypeError('参数应是HTML Element');\n  const topSpace = getFixedTop(reference);\n  const topSeen = topSpace - window.scrollY;\n  const toSeenBottomHeight = window.scrollY + window.innerHeight;\n  const toInputBottomHeight = topSpace + reference.offsetHeight;\n  const bottomSeen = toSeenBottomHeight - toInputBottomHeight;\n  const isBottomSeenEnough = bottomSeen > element.offsetHeight;\n  const isTopSeenEnough = topSeen > element.offsetHeight;\n  let top;\n  if (!isBottomSeenEnough && isTopSeenEnough) {\n    top = topSpace - element.offsetHeight;// 在参照元素上方\n  } else {\n    top = topSpace + reference.offsetHeight; // 在参照元素下方\n  }\n  return top;\n};\n\nconst getResponsiveLeft = (element, reference) => {\n  // 或许响应式的left，一般时对齐左边线，只有右侧空间不足时右边线对齐\n  if (!dom.isElement(element) || !dom.isElement(reference)) throw new TypeError('参数应是HTML Element');\n  const leftSpace = getFixedLeft(reference);\n  const rightSpace = document.body.offsetWidth - reference.offsetWidth - leftSpace;\n  const isRightEnough = (rightSpace + reference.offsetWidth) > element.offsetWidth;\n  const left = (isRightEnough)\n    ? leftSpace\n    : ((leftSpace + reference.offsetWidth) - element.offsetWidth);\n  return left;\n};\n\nconst bindWindowResize = () => {\n  // 窗口大小改变时 修改body的min-height\n  if (isWindowResize) return false;\n  isWindowResize += 1;\n  const resizeBodyMinHeight = () => {\n    const windowHeight = window.innerHeight;\n    document.body.style.minHeight = `${windowHeight}px`;\n  };\n  window.addEventListener('resize', () => {\n    resizeBodyMinHeight();\n  });\n  resizeBodyMinHeight();\n  return isWindowResize;\n};\n\nconst theadTop = () => {\n  const result = dom.of('<tr>');\n  const prevMonth = dom.of('<th>').text('◂').addClass('prev-month');\n  const th = dom.of('<th>');\n  const nextMonth = dom.of('<th>').text('▸').addClass('next-month');\n  const month = dom.of('<th>').attr('colspan', 2).addClass('month');\n  const input = dom.of('<input>').attr('type', 'number').addClass('year');\n  const thInput = dom.of('<th>').attr('colspan', 2).append(input);\n  const children = [prevMonth, th, thInput, month, nextMonth];\n  children.forEach((child) => {\n    result.append(child);\n  });\n  return result;\n};\n\nconst theadBottom = () => {\n  const result = dom.of('<tr>').addClass('week-sign');\n  const weekDay = [\n    dom.of('<th>').text('日').addClass('text-red'),\n    dom.of('<th>').text('一'),\n    dom.of('<th>').text('二'),\n    dom.of('<th>').text('三'),\n    dom.of('<th>').text('四'),\n    dom.of('<th>').text('五'),\n    dom.of('<th>').text('六').addClass('text-red'),\n  ];\n  weekDay.forEach((day) => {\n    result.append(day);\n  });\n  return result;\n};\n\nconst tdWeek = () => {\n  const result = dom.of('<tr>').addClass('week');\n  for (let i = 0; i < 7; i += 1) {\n    const td = dom.of('<td>');\n    result.append(td);\n  }\n  return result;\n};\n\nconst pickerElement = () => {\n  // html元素拼接结果\n  const result = dom.of('<div>').addClass('datepicker hide');\n  const table = dom.of('<table>').attr('border', 1).attr('cellspacing', 2);\n  const thtop = theadTop();\n  const thbottom = theadBottom();\n  const thead = dom.of('<thead>').append(thtop).append(thbottom);\n  const tbody = dom.of('<tbody>');\n  for (let i = 0; i < 6; i += 1) {\n    const week = tdWeek();\n    tbody.append(week);\n  }\n  table.append(thead).append(tbody);\n  result.append(table);\n  return result.dom;\n};\n\nclass Picker {\n  constructor(input) {\n    // 接受一个 <input type=\"text\"> 元素\n    if (!input || (input.nodeType !== 1) || (input.getAttribute('type') !== 'text')) throw new TypeError('参数应是一个input[type=text]');\n    const now = new Date();\n    this.input = input;\n    this.body = pickerElement();\n    this.current = CustomDate.of(now);\n    document.body.appendChild(this.body);\n    this.fillDayPickerByDate(this.current.toDate());\n    this.bindEvent();\n    return this;\n  }\n  fillDayPickerByDate(date) {\n    // 根据日期填充选择器的日期\n    if (!date || !(date instanceof Date)) throw new TypeError('参数应该是一个Date实例对象');\n    this.current = CustomDate.of(date);\n    const monthArray = CustomDate.getMonthArray(this.current.toDate());\n    const tbody = this.body.querySelector('tbody');\n    const trs = tbody.querySelectorAll('tr');\n    this.body.querySelector('.year').value = date.getFullYear();\n    this.body.querySelector('.month').innerText = (date.getMonth() + 1);\n    if (monthArray.length === 5) {\n      const next7th = new Date(date.getFullYear(), (date.getMonth() + 1), 6);\n      const next1stWeek = CustomDate.getWeekArray(next7th);\n      monthArray.push(next1stWeek);\n    }\n    monthArray.forEach((weekArray, weekIndex) => {\n      const trItem = trs[weekIndex];\n      const tds = trItem.querySelectorAll('td');\n      weekArray.forEach((day, dayIndex) => {\n        const tdItem = tds[dayIndex];\n        tdItem.innerText = day;\n        if (weekIndex === 0) {\n          if (Number(day) > 7) {\n            tdItem.classList.add('prev-month');\n          } else {\n            tdItem.classList.remove('prev-month');\n          }\n        } else if (weekIndex >= (monthArray.length - 2)) {\n          if (Number(day) < 15) {\n            tdItem.classList.add('next-month');\n          } else {\n            tdItem.classList.remove('next-month');\n          }\n        }\n        if ((this.current.day === day) && (!tdItem.classList.contains('prev-month')) && (!tdItem.classList.contains('next-month'))) {\n          const pastPikcer = this.body.querySelector('.current-picker');\n          if (pastPikcer) pastPikcer.classList.remove('.current-picker');\n          tdItem.classList.add('.current-picker');\n        }\n      });\n    });\n    return this;\n  }\n  fillDayPickerByCurrent() {\n    // 根据this.current日期填充\n    const byDate = this.current.toDate();\n    this.fillDayPickerByDate(byDate);\n    return this;\n  }\n  clearPicked() {\n    // 清空被选择的\n    const pastPicked = this.body.querySelectorAll('.current-picker');\n    pastPicked.forEach((item) => {\n      item.classList.remove('.current-picker');\n    });\n    return this;\n  }\n  bindMonthArrow() {\n    const prevMonth = this.body.querySelector('.prev-month');\n    const nextMonth = this.body.querySelector('.next-month');\n    prevMonth.addEventListener('click', () => {\n      // 左箭头事件 月份-1\n      this.current.backOneMonth();\n      this.fillDayPickerByCurrent();\n    });\n    nextMonth.addEventListener('click', () => {\n      // 右箭头事件 月份+1\n      this.current.aheadOneMonth();\n      this.fillDayPickerByCurrent();\n    });\n    return this;\n  }\n  bindPickAction() {\n    // 选择日期\n    const thead = this.body.querySelector('thead');\n    const tbody = this.body.querySelector('tbody');\n    const daypickerItems = tbody.querySelectorAll('td');\n    const yearInput = thead.querySelector('.year');\n    const monthBoard = thead.querySelector('.month');\n    const output = this.input;\n    daypickerItems.forEach((item) => {\n      item.addEventListener('click', () => {\n        const pickValue = {\n          year: Number(yearInput.value),\n          month: Number(monthBoard.innerText) - 1,\n          day: Number(item.innerText),\n        };\n        if (item.classList.contains('prev-month')) {\n          pickValue.month -= 1;\n          if (pickValue.month < 0) {\n            pickValue.year -= 1;\n            pickValue.month = 11;\n          }\n        } else if (item.classList.contains('next-month')) {\n          pickValue.month += 1;\n          if (pickValue.month > 11) {\n            pickValue.year += 1;\n            pickValue.month = 0;\n          }\n        }\n        const pickDate = new Date(pickValue.year, pickValue.month, pickValue.day);\n        this.current.reset(pickDate);\n        this.clearPicked();\n        output.value = `${this.current.year}-${this.current.month + 1}-${this.current.day}`;\n        item.classList.add('current-picker');\n        this.body.classList.add('hide');\n      });\n    });\n    return this;\n  }\n  bindTurnOn() {\n    // 点击输入框打开日期选择器\n    this.input.addEventListener('mousedown', (event) => {\n      event.stopPropagation();\n      dom.of(this.body).removeClass('arrow-top arrow-bottom reel hide'); // 先显示才有宽高\n      const datepickers = document.querySelectorAll('.datepicker');\n      const topSpace = getFixedTop(this.input);\n      const leftSpace = getFixedLeft(this.input);\n      const top = getResponsiveTop(this.body, this.input);\n      const left = getResponsiveLeft(this.body, this.input);\n      const yclass = (top < topSpace) ? 'arrow-bottom' : 'arrow-top';\n      const xclass = (left < leftSpace) ? 'pseudo-right' : '';\n      datepickers.forEach((picker) => {\n        if (!this.body.isSameNode(picker)) picker.classList.add('hide');\n      });\n      this.fillDayPickerByCurrent();\n      dom.of(this.body).addClass(`reel ${yclass} ${xclass}`);\n      this.body.style.top = `${top}px`;\n      this.body.style.left = `${left}px`;\n    });\n    return this;\n  }\n  bindTurnOff() {\n    // 点击日期选择器或输入框以外的地方隐藏日期选择器\n    if (isbindTurnOff) return false;\n    isbindTurnOff += 1;\n    document.body.addEventListener('mousedown', (e) => { // 最后记得调整body高度\n      const touchElement = e.target;\n      const datepickers = document.querySelectorAll('.datepicker');\n      datepickers.forEach((picker) => {\n        const isTouching = dom.of(touchElement).hasParent(picker);\n        if (!isTouching) picker.classList.add('hide');\n      });\n    });\n    return this;\n  }\n  bindYearInput() {\n    // 年份输入框\n    const year = this.body.querySelector('.year');\n    const month = this.body.querySelector('.month');\n    year.addEventListener('input', () => {\n      const value = Number(year.value);\n      if (!Number.isSafeInteger(value) || (value < 1900) || (value > 5000)) return false;\n      const newDay = {\n        year: value,\n        month: (Number(month.innerText) - 1),\n        day: 1,\n      };\n      const newDate = new Date(newDay.year, newDay.month, newDay.day);\n      this.fillDayPickerByDate(newDate);\n      return this;\n    });\n  }\n  bindEvent() {\n    bindWindowResize();\n    this.bindMonthArrow();\n    this.bindPickAction();\n    this.bindTurnOn();\n    this.bindTurnOff();\n    this.bindYearInput();\n  }\n}\n\nconst toPicker = (input) => {\n  const result = new Picker(input);\n  return result;\n};\n\nwindow.datepicker = toPicker;\nexport default toPicker;\n","import Dom from '../dom';\nimport datepicker from '../lib/datepicker';\nimport Component from './component';\nimport utils from '../utils';\n\n\nconst param = {\n  query: 'mission-form',\n  url: './assets/templates/missionForm.html',\n  name: 'missionForm',\n  data() {\n    return {\n      inited: 0,\n    };\n  },\n  selectors: {\n    contentInput: 'input[name=content]',\n    dateInput: 'input[name=date]',\n    cancelForm: '.cancel-form',\n    submit: '.submit',\n  },\n  methods: {\n    formSubmit() {\n      // 提交表单\n      const content = Dom.of(this.elements.contentInput).attr('value');\n      if (!content) { window.alert('请输入任务内容'); } // 如果没有内容就取消操作\n      const date = Dom.of(this.elements.dateInput).attr('value') || '';\n      const id = Dom.of(this.template).attr('data-item-id');\n      const cid = Dom.of(this.template).attr('data-cid');\n      const data = { content, date };\n      if (!id) {\n        this.dispatchEvent('create', data);\n      } else {\n        data.id = Number(id);\n        data.cid = cid;\n        this.dispatchEvent('update', data);\n      }\n      return data;\n    },\n    fill() {\n      this.present = this.present || {};\n      this.data.content = this.present.content || '';\n      this.data.date = this.present.date || '';\n      this.data.id = this.present.id || '';\n      this.data.cid = this.present.cid || '';\n      this.data.submitText = (this.data.cid) ? '更新任务' : '新建任务';\n      Dom.of(this.elements.contentInput).attr('value', this.data.content);\n      Dom.of(this.elements.dateInput).attr('value', this.methods.formatDate(this.data.date));\n      Dom.of(this.template).attr('data-item-id', this.data.id);\n      Dom.of(this.template).attr('data-cid', this.data.cid);\n      Dom.of(this.elements.submit).attr('text', this.data.submitText);\n    },\n    formatDate(parameter) {\n      // parameter可以是表示时间字符串 如'2018/01/01'或'2018-01-01'或Date\n      // 返回表示时间的字符串格式'2018-01-01'\n      const date = (parameter && parameter instanceof Date)\n        ? parameter\n        : new Date(String(parameter));\n      const result = (date.getTime()) ? date.toLocaleDateString().replace(/\\//g, '-') : '';\n      return result;\n    },\n    clear() {\n      this.present = {};\n      this.methods.fill();\n    },\n    hide() {\n      this.methods.clear();\n      Dom.of(this.template).addClass('hide');\n      this.dispatchEvent('hide');\n      return this;\n    },\n    show() {\n      this.methods.fill();\n      Dom.of(this.template).removeClass('hide');\n      this.dispatchEvent('show');\n      return this;\n    },\n    init() {\n      if (this.data.inited) { return false; }\n      this.data.picker = datepicker(this.elements.dateInput);\n      Dom.of(this.data.picker.body).attr('data-c-id', `c${this.componentId}`);\n      this.methods.bindEvents();\n      this.data.inited = 1;\n      return this;\n    },\n    reduce() {\n      // 还原missionListItem\n      if (!this.data.cid) { return utils.newPromise(); }\n      const pastItem = Component.findBy({ componentId: Number(this.data.cid) });\n      if (!pastItem) { throw new ReferenceError(`componentId:${this.data.cid}的Item未找到`); }\n      const promise = this.replace(pastItem)\n        .then(() => {\n          this.present = {};\n          this.methods.hide();\n          return this;\n        });\n      return promise;\n    },\n    bindEvents() {\n      if (this.data.inited) { return false; }\n      Dom.of(this.elements.submit).on('click', (event) => {\n        // 提交\n        event.stopPropagation();\n        this.methods.formSubmit();\n      });\n      Dom.of(this.elements.cancelForm).on('click', (event) => {\n        // 隐藏form 如果template有data-cid属性则应先还原\n        event.stopPropagation();\n        return this.methods.reduce().then(() => this.methods.hide());\n      });\n      return this;\n    },\n  },\n  created() {\n    this.methods.init();\n    this.methods.show();\n  },\n};\n\nexport default param;\n","parcelRequire=function(e,r,n,t){var i=\"function\"==typeof parcelRequire&&parcelRequire,o=\"function\"==typeof require&&require;function u(n,t){if(!r[n]){if(!e[n]){var f=\"function\"==typeof parcelRequire&&parcelRequire;if(!t&&f)return f(n,!0);if(i)return i(n,!0);if(o&&\"string\"==typeof n)return o(n);var c=new Error(\"Cannot find module '\"+n+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}p.resolve=function(r){return e[n][1][r]||r};var l=r[n]=new u.Module(n);e[n][0].call(l.exports,p,l,l.exports,this)}return r[n].exports;function p(e){return u(p.resolve(e))}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=r,u.parent=i,u.register=function(r,n){e[r]=[function(e,r){r.exports=n},{}]};for(var f=0;f<n.length;f++)u(n[f]);if(n.length){var c=u(n[n.length-1]);\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=c:\"function\"==typeof define&&define.amd?define(function(){return c}):t&&(this[t]=c)}return u}({\"cdEW\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var n=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;if(!n)throw new ReferenceError(\"您的浏览器不支持indexeddb\");var o=0,a=function(){return o+=1},i={databaseName:window.location.hostname,objectStoreName:\"store\"},c=function(e){if(!(e instanceof IDBRequest))throw new TypeError(e+\"不是有效的IDBRequest\");return new Promise(function(t,r){e.onsuccess=function(e){t(e.target.result)},e.onerror=function(e){r(e.target.error)}})},u=function(e,r){var n=void 0;if(e&&e instanceof Function||(n=r+\" 参数callback不能是\"+(void 0===e?\"undefined\":t(e))+\"的\"+e+\",只接受Function类型callback\"),n)throw new Error(n);return!0},s=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};r(this,t);var n={};return n.id=a(),n.databaseName=e.databaseName||i.databaseName,n.objectStoreName=e.objectStoreName||i.objectStoreName,n.id>1&&(n.databaseName=\"\"+n.databaseName+n.id),this.databaseName=n.databaseName,this.objectStoreName=n.objectStoreName,this.currentPromise=new Promise(function(e){return e(1)}),this}return e(t,[{key:\"catchPromise\",value:function(e,t){var r=this;if(!(e instanceof Promise))throw new TypeError(e+\"不是Promise实例对象\");if(t&&\"string\"!=typeof t)throw new TypeError(\"Error message: \"+t+\" 不是字符串\");var n=e.catch(function(e){throw console.error(t,r,e),e});return this.currentPromise=n,n}},{key:\"openDB\",value:function(){var e=this,t=new Promise(function(t,r){var o=n.open(e.databaseName,e.version);o.onupgradeneeded=function(t){var r=t.target.result,n=e.objectStoreName;r.objectStoreNames.contains(n)||r.createObjectStore(n,{keyPath:\"primaryKey\",autoIncrement:!0})},o.onsuccess=function(r){var n=r.target.result;n.onclose=function(){n.state=\"closed\"},n.onabort=function(){n.close()},n.onversionchange=function(){e.database=n,e.version=n.version},n.state=\"open\",e.database=n,t(e.database)},o.onerror=function(e){r(e.target.error)}}),r=t.catch(function(r){return console.error(r),e.version=e.database.version,e.database.objectStoreNames.contains(e.objectStoreName)||(e.version+=1),t});return this.catchPromise(r,\"Store.openDB\")}},{key:\"ready\",value:function(){var e=this,t=this.database instanceof IDBDatabase&&\"open\"===this.database.state&&this.database.objectStoreNames.contains(this.objectStoreName)?this.currentPromise.then(function(){return e.database}):this.openDB();return this.catchPromise(t,\"Store.ready\")}},{key:\"objectStore\",value:function(){var e=this,t=this.ready().then(function(t){var r=e.objectStoreName;return t.transaction([r],\"readwrite\").objectStore(r)});return this.catchPromise(t,\"Store.objectStore\")}},{key:\"clear\",value:function(){var e=this.objectStore().then(function(e){var t=e.clear();return c(t)});return this.catchPromise(e,\"Store.clear\")}},{key:\"getAll\",value:function(){var e=this.objectStore().then(function(e){var t=e.getAll();return c(t)});return this.catchPromise(e,\"Store.getAll\")}},{key:\"remove\",value:function(e){var t=e instanceof Array?e:[e],r=void 0;t.forEach(function(e){if(Number.isSafeInteger(e)||(r=\"Store.remove primaryKey只接受Integer，不能是\"+e),r)throw new Error(r)});var n=void 0,o=this.objectStore().then(function(e){n=e});return t.forEach(function(e){o=o.then(function(){var t=n.delete(e);return c(t)})}),o=o.then(function(){return t}),this.catchPromise(o,\"Store.remove\")}},{key:\"get\",value:function(e){var t=e instanceof Array?e:[e],r=[],n=void 0;t.forEach(function(e){if(Number.isSafeInteger(e)||(n=\"Store.get primaryKey只接受Integer，不能是\"+e),n)throw new Error(n)});var o=void 0,a=this.objectStore().then(function(e){o=e});return t.forEach(function(e){a=a.then(function(){var t=o.get(e);return c(t)}).then(function(e){r.push(e)})}),a=a.then(function(){return r}),this.catchPromise(a,\"Store.get\")}},{key:\"push\",value:function(e){var t=void 0,r=e instanceof Array?e:[e],n=[];r.forEach(function(e){if(e instanceof Object||(t=\"Store.push item只接受对象，不能是\"+e),e.primaryKey&&(t=\"Store.push data.primaryKey只接受null或undefiend，不能是\"+e.primaryKey),t)throw new Error(t)});var o=void 0,a=this.objectStore().then(function(e){o=e});return r.forEach(function(e){a=a.then(function(){var t=o.add(e);return c(t)}).then(function(e){n.push(e)})}),a=a.then(function(){return n}),this.catchPromise(a,\"Store.push\")}},{key:\"update\",value:function(e){var t=void 0,r=e instanceof Array?e:[e],n=[];r.forEach(function(e){if(e instanceof Object||(t=\"Store.update data只接受对象，不能是\"+e),e.primaryKey&&Number.isSafeInteger(e.primaryKey)||(t=\"Store.update data.primaryKey只接受Integer，不能是\"+e.primaryKey),t)throw new Error(t)});var o=void 0,a=this.objectStore().then(function(e){o=e});return r.forEach(function(e){a=a.then(function(){var t=o.put(e);return c(t)}).then(function(e){n.push(e)})}),a=a.then(function(){return n}),this.catchPromise(a,\"Store.update\")}},{key:\"formatOpenCursorWithSuccessCallback\",value:function(e){var t=\"Store.formatOpenCursorWithSuccessCallback\";u(e,t);var r=this.objectStore().then(function(t){var r=t.openCursor();return new Promise(function(t,n){r.onsuccess=function(r){var n=r.target.result,o=e(n);!o&&n||t(o)},r.onerror=function(e){n(e.target.error)}})});return this.catchPromise(r,t)}},{key:\"find\",value:function(e){u(e,\"Store.find\");var t=void 0,r=this.formatOpenCursorWithSuccessCallback(function(r){r&&(e(r.value,r.primaryKey)?t=r.value:r.continue());return t});return this.catchPromise(r,\"Store.find\")}},{key:\"filter\",value:function(e){u(e,\"Store.filter\");var t=[],r=this.formatOpenCursorWithSuccessCallback(function(r){r&&(!!e(r.value,r.primaryKey)&&t.push(r.value),r.continue())}).then(function(){return t});return this.catchPromise(r,\"Store.filter\")}},{key:\"map\",value:function(e){u(e,\"Store.map\");var t=[],r=this.formatOpenCursorWithSuccessCallback(function(r){if(r){var n=e(r.value,r.primaryKey);t.push(n),r.continue()}}).then(function(){return t});return this.catchPromise(r,\"Store.map\")}}]),t}();window.ArrayStorage=s,exports.default=s;\n},{}]},{},[\"cdEW\"], null)\n//# sourceMappingURL=/arraystorage.map","import ArrayStorage from 'arraystorage';\nimport utils from './utils';\n\nconst mission = new ArrayStorage();\n\nconst getAll = () => {\n  const filter = mission.getAll();\n  return filter;\n};\nconst getExpired = () => {\n  const filter = mission.filter((item) => {\n    const isNeed = (item.date instanceof Date) && (utils.differDay(item.date, utils.now) > 0);\n    return isNeed;\n  });\n  return filter;\n};\nconst getDone = () => {\n  const filter = mission.filter(item => (item.state === 'done'));\n  return filter;\n};\nconst getUndone = () => {\n  const filter = mission.filter(item => (item.state !== 'done'));\n  return filter;\n};\n\nconst defaultQuery = {\n  all: getAll,\n  expired: getExpired,\n  done: getDone,\n  undone: getUndone,\n};\n\n\nconst getDate = () => {\n  const filter = mission.filter((item) => {\n    const isNeed = (item.date instanceof Date) && (utils.differDay(item.date, utils.now) > 0);\n    return isNeed;\n  });\n  return filter;\n};\nconst getMark = (mark) => {\n  const filter = mission.filter((item) => {\n    const isNeed = (typeof item.mark === 'string') && item.mark === String(mark);\n    return isNeed;\n  });\n  return filter;\n};\nconst getQuery = (query) => {\n  let result;\n  if (typeof query === 'string') {\n    if (defaultQuery[query]) {\n      result = defaultQuery[query]();\n    } else {\n      result = getMark(query);\n    }\n  } else if (query instanceof Date) {\n    result = getDate(query);\n  } else {\n    console.warn(`mission.methods.GetQuery 尚不支持查询${query}`);\n  }\n  return result;\n};\n\n\nmission.methods = {\n  getAll, getExpired, getDate, getMark, getQuery,\n};\n\nexport default mission;\n\n","import Dom from '../dom';\nimport mission from '../model';\nimport Component from './component';\nimport utils from '../utils';\n\nconst param = {\n  query: 'mission-list-item',\n  url: './assets/templates/missionListItem.html',\n  name: 'missionListItem',\n  selectors: {\n    content: '.item-content',\n    date: '.item-date',\n    finish: '.finish',\n    itemMain: '.item-main',\n    counter: '#counter',\n  },\n  data() {\n    return {\n      counter: 1,\n      inited: 0,\n    };\n  },\n  methods: {\n    init() {\n      if (this.data.inited) { return false; }\n      this.data.inited = 1;\n      this.methods.bindEvents();\n      return this;\n    },\n    bindEvents() {\n      // 切换任务状态\n      Dom.of(this.elements.finish).on('click', () => {\n        const toggleState = (this.present.state === 'done') ? 'undone' : 'done';\n        const data = {\n          content: this.present.content,\n          date: (utils.isValidDate(this.present.date)) ? this.present.date : '',\n          primaryKey: Number(this.present.primaryKey),\n          state: toggleState,\n        };\n        mission.update(data).then(() => {\n          Dom.of(this.template).toggleClass('done');\n        });\n      });\n      // 更新自己\n      Dom.of(this.elements.content).on('click', () => {\n        // 替换当前组件为missionForm\n        // 如果missionForm有data-cid属性 说明missionForm被其他组件替换，应先还原\n        if (!this.data.formId) { throw new Error(`Item.data.formId不能为${this.data.formId}`); }\n        let promise = utils.newPromise();\n        const missionForm = Component.findBy({ componentId: Number(this.data.formId) });\n        const detail = {\n          cid: this.componentId,\n          content: this.data.content,\n          date: this.data.date,\n          id: this.data.id,\n          formId: this.data.formId,\n        };\n        missionForm.present = detail;\n        promise = promise\n          .then(() => missionForm.methods.reduce())\n          .then(() => this.replace(missionForm))\n          .then(() => {\n            missionForm.present = detail;\n            missionForm.methods.show();\n          });\n        return promise;\n      });\n    },\n    fill() {\n      this.present = this.present || {};\n      this.data.content = this.present.content;\n      this.data.date = this.present.date;\n      this.data.id = this.present.id;\n      this.data.formId = this.present.formId;\n      const dateStr = utils.formatDate(this.present.date);\n      Dom.of(this.elements.content).attr('text', this.present.content);\n      Dom.of(this.elements.date).attr('text', dateStr);\n      Dom.of(this.template).attr('data-item-id', this.present.id);\n      if (this.present.state === 'done') {\n        Dom.of(this.template).addClass('done');\n      }\n    },\n  },\n  created() {\n    this.methods.init();\n    this.methods.fill();\n  },\n};\n\nexport default param;\n","import missionForm from './missionForm';\nimport Component from './component';\nimport Dom from '../dom';\nimport mission from '../model';\nimport missionListItem from './missionListItem';\nimport utils from '../utils';\n\nconst dayMark = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];\n\nconst param = {\n  query: 'mission-card',\n  url: './assets/templates/missionCard.html',\n  name: 'missionCard',\n  data() {\n    return {\n      items: [],\n      dayMark: '',\n      dateMark: '',\n    };\n  },\n  passon: [], // 接受父组件全部present\n  selectors: {\n    form: 'mission-form',\n    cardHeader: '.card-header',\n    showForm: '.show-form',\n    createMission: '.create-mission',\n    cardBody: '.card-body',\n  },\n  components: [\n    missionForm,\n  ],\n  methods: {\n    init() {\n      if (this.data.inited) { return false; }\n      this.data.date = this.present.date;\n      this.data.days = this.present.days;\n      const promise = utils.newPromise()\n        .then(() => this.methods.initForm())\n        .then(() => this.methods.loadDB())\n        .then(() => this.methods.initItems());\n      this.data.inited = 1;\n      return promise;\n    },\n    initItems() {\n      let promise = utils.newPromise();\n      // 添加 li item\n      this.data.items.forEach((item) => {\n        promise = promise.then(() => this.methods.appendItem(item));\n      });\n      return promise;\n    },\n    loadDB() {\n      const filter = mission.methods.getQuery(this.present.query);\n      const promise = filter\n        .then((items) => {\n          const bysSate = utils.divisio(items, item => (item.state !== 'done')); // [[未完成], [已完成]]\n          const byDate = bysSate.map((ary) => {\n            const allot = utils.divisio(ary, item => utils.isValidDate(item.date));\n            return allot;\n          });\n          // byDate\n          // [\n          //   [\n          //     ['有日期 未完成'], ['无日期 未完成']\n          //   ],\n          //   [\n          //     ['有日期 已完成'], ['无日期 已完成']\n          //   ],\n          // ]\n          const deep = byDate.map((states) => {\n            const sortByDate = states[0].sort((a, b) => (a.date <= b.date));\n            return [sortByDate, states[1]];\n          });\n          const flat = utils.flat(deep, 2);\n          // flat 未完成在前，有日期的在前，日期升序 一维数组\n          this.data.items = flat;\n          return this.data.items;\n        });\n      // todo sort 未完成在前， 有日期的在前，日期升序 ''<1<2   1,2,''\n      return promise;\n    },\n    appendItem(detail) {\n      // 添加li item\n      const present = Object.assign(detail);\n      present.formId = this.data.formId;\n      const itemParam = Object.assign({ present }, missionListItem);\n      const position = Dom.of(this.elements.form).getIndex();\n      const append = this.appendChild(itemParam, this.elements.cardBody, position);\n      return append;\n    },\n    initForm() {\n      const form = this.findBy({ name: missionForm.name });\n      if (!form) { return false; }\n      this.data.form = form;\n      this.data.formId = form.componentId;\n      // 表单隐藏和显示的转换\n      form.addEventListener('hide', () => {\n        Dom.of(this.elements.createMission).removeClass('hide');\n      });\n      form.addEventListener('show', () => {\n        Dom.of(this.elements.createMission).addClass('hide');\n      });\n      // 默认隐藏表单\n      form.methods.hide();\n      // 显示表单\n      Dom.of(this.elements.showForm).on('click', () => {\n        // 还原li item\n        const promise = form.methods.reduce()\n          .then(() => {\n            const position = Dom.of(this.elements.createMission).getIndex();\n            return this.appendChild(form, this.elements.cardBody, position);\n          }).then(() => {\n            form.present = { date: this.data.date };\n            form.methods.show();\n          });\n        return promise;\n      });\n      // 创建item\n      form.addEventListener('create', (e) => {\n        if (!e.detail.content) { return false; }\n        const present = {\n          content: e.detail.content,\n          date: new Date(e.detail.date),\n        };\n        const promise = mission.push(present)\n          .then((primaryKey) => {\n            // 添加li item\n            present.primaryKey = primaryKey;\n            return this.methods.appendItem(present);\n          })\n          .then(() => form.methods.hide());\n        return promise;\n      });\n      // 更新item\n      form.addEventListener('update', (e) => {\n        if (!e.detail.content) { return false; }\n        const upData = {\n          content: e.detail.content,\n          date: e.detail.date,\n          primaryKey: e.detail.primaryKey,\n        };\n        const present = Object.assign({\n          cid: this.componentId,\n          formId: this.data.formId,\n        }, upData);\n        mission.update(upData)\n          .then((primaryKey) => {\n            // 更新后将form替换为li\n            const li = Component.findBy({ componentId: Number(e.detail.cid) });\n            present.primaryKey = primaryKey;\n            li.present = present;\n            li.methods.fill();\n            this.replaceChild(li, this.data.form);\n          })\n          .then(() => form.methods.hide());\n        return present;\n      });\n      return form;\n    },\n  },\n  created() {\n    this.methods.init();\n  },\n};\n\nexport default param;\n","import leftMenu from './leftMenu';\nimport missionCard from './missionCard';\nimport Dom from '../dom';\n\n// const defaultQuery = {\n//   all: getAll,\n//   expired: getExpired,\n//   done: getDone,\n//   undone: getUndone,\n// };\nconst text = {\n  all: '所有任务',\n  expired: '已过期',\n  done: '已完成',\n  undone: '未完成',\n};\n\nconst param = {\n  query: 'mission-content',\n  url: './assets/templates/welcome.html',\n  name: 'welcome',\n  // present 是增量传递\n  present: {\n    text,\n  },\n  selectors: {\n    title: '.title',\n    left: '.left',\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    init() {\n      if (this.data.inited) { return false; }\n      this.data.inited = 1;\n      return this;\n    },\n  },\n  created() {\n    const title = text[this.present.query] || String(this.present.query);\n    Dom.of(this.elements.title).attr('text', title);\n    this.methods.init();\n  },\n  components: [leftMenu, missionCard],\n};\nexport default param;\n","import welcome from './welcome';\nimport Component from './component';\n\nconst router = {\n  query: 'router',\n  url: './assets/templates/router.html',\n  name: 'router',\n  data() {\n    return {\n      counter: 1,\n      current: this,\n      inited: 0,\n      path: '',\n      state: {},\n      origin: window.location.origin,\n      href: window.location.href,\n    };\n  },\n  route: {\n    welcome,\n  },\n  methods: {\n    init() {\n      if (this.data.inited) { return false; }\n      this.data.inited = 1;\n      return this;\n    },\n    // 不刷新页面改变path\n    // 参数path是this.route指定的组件，state会作为present传入\n    render(path, state) {\n      const route = this.route[String(path)];\n      if (!route) { throw new Error(`路径${path}对应Component不存在`); }\n      this.data.path = path;\n      this.data.state = Object.assign({}, state);\n      const param = Object.assign({}, route);\n      const present = Object.assign({}, param.present, this.data.state);\n      param.present = present;\n      const current = this.data.current;\n      const promise = current.replace(param).then((cpt) => {\n        if (current !== this) { Component.removeComponent(current); }\n        this.data.current = cpt;\n        const url = `${this.data.origin}/#/${path}/`;\n        window.history.pushState(this.data.state, 0, url);\n        this.data.href = window.location.href;\n        return cpt;\n      });\n      return promise;\n    },\n    restore() {\n      if (!this.data.path) { return false; }\n      const promise = this.methods.render(this.data.path, this.data.state);\n      return promise;\n    },\n  },\n  created() {\n    this.methods.init();\n    window.router = this;\n    this.methods.render('welcome', { query: 'all' });\n  },\n};\n\nexport default router;\n\n","import Component from './component';\nimport routerParam from './router';\nimport Dom from '../dom';\n\nwindow.Dom = Dom;\n\nconst main = () => {\n  document.addEventListener('DOMContentLoaded', () => {\n    window.addEventListener('resize', () => {\n      document.body.style.offsetHeight = `${window.innerHeight}px`;\n    });\n    window.resizeTo(window.innerWidth, window.innerHeight);\n    Component.pjaxCreate(routerParam);\n  });\n};\n\nexport default main;\n\n// todo mission增加state一项\n// 页面链接 改为传递 {query: 'all'} {query: 'expired'} {query: 'today'} {query: 'done'} {query: 'undone'}\n","import main from './components/main';\n\nwindow.now = new Date();\nmain();\n"]}